networks:
  public:
    external: true
  internal:
    external: true

services:
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    restart: unless-stopped
    command: start
    healthcheck:
      test: wget -qO- http://localhost:8080/health/ready || exit 1
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD?}
      KC_HOSTNAME: auth.${DOMAIN?}
      KC_PROXY: edge
      KC_DB: ${KC_DB:-postgres}
      KC_DB_URL_HOST: ${KC_DB_URL_HOST:-relational-database-postgres-1}
      KC_DB_USERNAME: ${KC_DB_USERNAME:-postgres}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD?}
      KC_HEALTH_ENABLED: true
    labels:
      traefik.enable: true
      traefik.http.routers.keycloak.rule: Host(`auth.${DOMAIN?}`)
      traefik.http.routers.keycloak.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.services.keycloak.loadbalancer.server.port: 8080
    networks:
      - public
      - internal

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: wget -qO- http://localhost:4180/ping || exit 1
    environment:
      # OIDC settings
      OAUTH2_PROXY_PROVIDER: keycloak-oidc
      OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID?}
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET?}
      OAUTH2_PROXY_REDIRECT_URL: https://oauth2-proxy.${DOMAIN?}/oauth2/callback
      OAUTH2_PROXY_OIDC_ISSUER_URL: https://auth.${DOMAIN?}/realms/master
      # OAUTH2_PROXY_SCOPE: 'user:email'
      # Cookie settings
      OAUTH2_PROXY_COOKIE_DOMAINS: '*.${DOMAIN?}'
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET?}
      OAUTH2_PROXY_COOKIE_SECURE: true
      OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST: true
      OAUTH2_PROXY_COOKIE_CSRF_EXPIRE: 5m
      # Other settings
      OAUTH2_PROXY_REVERSE_PROXY: true
      OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4180'
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_WHITELIST_DOMAINS: '*.${DOMAIN?}'
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: 'true'
      # OAUTH2_PROXY_PASS_BASIC_AUTH: 'false'
      # OAUTH2_PROXY_PASS_USER_HEADERS: 'true'
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: 'true'
      OAUTH2_PROXY_SET_XAUTHREQUEST: 'true'
    labels:
      traefik.enable: true
      traefik.http.routers.oauth2-proxy.rule: Host(`oauth2-proxy.${DOMAIN?}`) || PathPrefix(`/oauth2`)
      traefik.http.routers.oauth2-proxy.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.services.oauth2-proxy.loadbalancer.server.port: 4180
      # Auth middleware
      traefik.http.middlewares.auth-verify.forwardAuth.address: https://oauth2-proxy.${DOMAIN?}/oauth2/auth
      traefik.http.middlewares.auth-verify.forwardAuth.trustForwardHeader: true
      traefik.http.middlewares.auth-verify.forwardAuth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,Set-Cookie
      traefik.http.middlewares.auth-signin.errors.service: oauth2-proxy@docker
      traefik.http.middlewares.auth-signin.errors.status: '401'
      traefik.http.middlewares.auth-signin.errors.query: /oauth2/sign_in
    networks:
      - public
      - internal
