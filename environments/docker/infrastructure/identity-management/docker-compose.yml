networks:
  public:
    external: true
  internal:
    external: true

services:
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    restart: unless-stopped
    command: start
    environment:
      # General settings
      KC_HOSTNAME: auth.${DOMAIN?}
      KC_PROXY: edge
      # Admin user settings
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD?}
      # Database settings
      KC_DB: ${KC_DB:-postgres}
      KC_DB_URL_HOST: ${KC_DB_URL_HOST:-relational-database-postgres-1}
      KC_DB_USERNAME: ${KC_DB_USERNAME:-postgres}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD?}
    labels:
      traefik.enable: true
      traefik.http.routers.keycloak.rule: Host(`auth.${DOMAIN?}`)
      traefik.http.routers.keycloak.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.services.keycloak.loadbalancer.server.port: 8080
    networks:
      - public
      - internal

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
    restart: unless-stopped
    healthcheck:
      test: wget -qO- http://localhost:4180/ping || exit 1
    environment:
      # General settings
      OAUTH2_PROXY_REVERSE_PROXY: true
      OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4180'
      OAUTH2_PROXY_BANNER: '-' # disables banner
      OAUTH2_PROXY_FOOTER: '-' # disables footer
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
      # OIDC settings
      OAUTH2_PROXY_PROVIDER: keycloak-oidc
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: Keycloak
      OAUTH2_PROXY_CLIENT_ID: ${OAUTH2_PROXY_CLIENT_ID?}
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET?}
      OAUTH2_PROXY_OIDC_ISSUER_URL: https://auth.${DOMAIN?}/realms/master
      OAUTH2_PROXY_REDIRECT_URL: https://oauth2-proxy.${DOMAIN?}/oauth2/callback
      OAUTH2_PROXY_SCOPE: 'openid email profile'
      # Cookie settings
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET?}
      OAUTH2_PROXY_COOKIE_DOMAINS: .${DOMAIN?}
      OAUTH2_PROXY_COOKIE_REFRESH: '1h'
      # Headers settings
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: true
      OAUTH2_PROXY_SET_XAUTHREQUEST: true

      # Domain settings
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_WHITELIST_DOMAINS: .${DOMAIN?}
    labels:
      traefik.enable: true
      traefik.http.routers.oauth2-proxy.rule: Host(`oauth2-proxy.${DOMAIN?}`) || PathPrefix(`/oauth2`)
      traefik.http.routers.oauth2-proxy.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.services.oauth2-proxy.loadbalancer.server.port: 4180
      # Auth middlewares
      traefik.http.middlewares.auth-verify.forwardAuth.address: http://identity-management-oauth2-proxy-1:4180/ # Required to go around the reverse proxy becaause of https://github.com/oauth2-proxy/oauth2-proxy/issues/1768
      traefik.http.middlewares.auth-verify.forwardAuth.trustForwardHeader: true
      traefik.http.middlewares.auth-verify.forwardAuth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,X-Auth-Request-Redirect,Authorization
      # Does not work yet: https://github.com/oauth2-proxy/oauth2-proxy/issues/1768
      # traefik.http.middlewares.auth-signin.errors.service: oauth2-proxy@docker
      # traefik.http.middlewares.auth-signin.errors.status: '401'
      # traefik.http.middlewares.auth-signin.errors.query: /oauth2/sign_in
    networks:
      - public
      - internal
