services:
  contoso-university:
    image: ghcr.io/devantler/data-product:v0.1.32
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NAME: Contoso University Data Product
      DESCRIPTION: A data product to query and manage students and courses at the Contoso University.
      PUBLICURL: https://contoso-university-dp.${DOMAIN?}
      LICENSE__NAME: MIT
      LICENSE__URL: https://opensource.org/licenses/MIT
      OWNER__NAME: ${DP_OWNER_NAME?}
      OWNER__EMAIL: ${DP_OWNER_EMAIL?}
      OWNER__ORGANISATION: ${DP_OWNER_ORGANISATION?}
      OWNER__PHONE: ${DP_OWNER_PHONE?}
      OWNER__WEBSITE: ${DP_OWNER_WEBSITE?}
      APIS__REST__ENABLEBULKCONTROLLER: true
      CACHESTORE__SERVER: data-product-redis-1:6379
      CACHESTORE__TYPE: Redis
      CACHESTORE__DATABASE: 0
      AUTH__TYPE: Keycloak
      AUTH__AUTHSERVERURL: https://auth.${DOMAIN?}/
      AUTH__CLIENTID: ${DP_AUTH_CLIENTID?}
      AUTH__CLIENTSECRET: ${DP_AUTH_CLIENTSECRET?}
      DASHBOARD__EMBEDDEDSERVICES__0__NAME: Tracing
      DASHBOARD__EMBEDDEDSERVICES__0__URL: https://jaeger.${DOMAIN?}
      DASHBOARD__EMBEDDEDSERVICES__1__NAME: Monitoring
      DASHBOARD__EMBEDDEDSERVICES__1__URL: https://grafana.${DOMAIN?}/d/KdDACDp4z/data-product-metrics?orgId=1&refresh=5s&var-job=opentelemetry-collector&var-exported_job=contoso-university-data-product&var-http_client_peer_name=All&kiosk
      DASHBOARD__EMBEDDEDSERVICES__2__NAME: Data Store
      DASHBOARD__EMBEDDEDSERVICES__2__URL: https://postgres.${DOMAIN?}
      DATACATALOG__TYPE: DataHub
      DATACATALOG__URL: https://datahub.${DOMAIN?}
      DATACATALOG__ACCESSTOKEN: ${DATA_CATALOG_ACCESS_TOKEN?}
      INPUTS__0__FILEPATH: assets/input/contoso-university-single.json
      INPUTS__0__TYPE: File
      INPUTS__1__FILEPATH: assets/input/contoso-university-multiple.json
      INPUTS__1__TYPE: File
      INPUTS__2__GROUPID: contoso-university
      INPUTS__2__SERVERS: event-streaming-kafka-1:9092
      INPUTS__2__TOPIC: contoso-university
      INPUTS__2__TYPE: Kafka
      OUTPUTS__0__TYPE: File
      OUTPUTS__0__FILEPATH: assets/output/contoso-university.txt
      DATASTORE__CONNECTIONSTRING: Host=relational-database-postgres-1;Port=5432;Database=contoso-university;Username=postgres;Password=${POSTGRES_PASSWORD?}
      DATASTORE__PROVIDER: PostgreSQL
      DATASTORE__TYPE: SQL
      SCHEMAREGISTRY__SCHEMA__SUBJECT: contoso-university-value
      SCHEMAREGISTRY__SCHEMA__VERSION: 1
      SCHEMAREGISTRY__TYPE: Kafka
      SCHEMAREGISTRY__URL: schema-registry-kafka-1:8081
      TELEMETRY__ENDPOINT: http://observability-opentelemetry-collector-1:4317
      TELEMETRY__EXPORTERTYPE: OpenTelemetry
      FEATUREFLAGS__ENABLEDATACATALOG: true
      FEATUREFLAGS__ENABLEINPUTS: true
      FEATUREFLAGS__ENABLEOUTPUTS: true
      FEATUREFLAGS__ENABLETELEMETRY: true
      FEATUREFLAGS__ENABLEAUTH: true
    labels:
      traefik.enable: true
      traefik.http.routers.contoso-university-dp.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.routers.contoso-university-dp.rule: Host(`contoso-university-dp.${DOMAIN?}`)
    networks:
      - internal
      - public
  
  movies:
    image: ghcr.io/devantler/data-product:v0.1.32
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NAME: Movies Data Product
      DESCRIPTION: A data product to query and manage movies.
      PUBLICURL: https://movies-dp.${DOMAIN?}
      LICENSE__NAME: MIT
      LICENSE__URL: https://opensource.org/licenses/MIT
      OWNER__NAME: ${DP_OWNER_NAME?}
      OWNER__EMAIL: ${DP_OWNER_EMAIL?}
      OWNER__ORGANISATION: ${DP_OWNER_ORGANISATION?}
      OWNER__PHONE: ${DP_OWNER_PHONE?}
      OWNER__WEBSITE: ${DP_OWNER_WEBSITE?}
      APIS__REST__ENABLEBULKCONTROLLER: true
      CACHESTORE__SERVER: data-product-redis-1:6379
      CACHESTORE__TYPE: Redis
      CACHESTORE__DATABASE: 1
      AUTH__TYPE: Keycloak
      AUTH__AUTHSERVERURL: https://auth.${DOMAIN?}/
      AUTH__CLIENTID: ${DP_AUTH_CLIENTID?}
      AUTH__CLIENTSECRET: ${DP_AUTH_CLIENTSECRET?}
      DASHBOARD__EMBEDDEDSERVICES__0__NAME: Tracing
      DASHBOARD__EMBEDDEDSERVICES__0__URL: https://jaeger.${DOMAIN?}
      DASHBOARD__EMBEDDEDSERVICES__1__NAME: Monitoring
      DASHBOARD__EMBEDDEDSERVICES__1__URL: https://grafana.${DOMAIN?}/d/KdDACDp4z/data-product-metrics?orgId=1&refresh=5s&var-job=opentelemetry-collector&var-exported_job=movies-data-product&var-http_client_peer_name=All&kiosk
      DASHBOARD__EMBEDDEDSERVICES__2__NAME: Data Store
      DASHBOARD__EMBEDDEDSERVICES__2__URL: https://postgres.${DOMAIN?}
      DATACATALOG__TYPE: DataHub
      DATACATALOG__URL: https://datahub.${DOMAIN?}
      DATACATALOG__ACCESSTOKEN: ${DATA_CATALOG_ACCESS_TOKEN?}
      INPUTS__0__GROUPID: movies
      INPUTS__0__SERVERS: event-streaming-kafka-1:9092
      INPUTS__0__TOPIC: movies
      INPUTS__0__TYPE: Kafka
      OUTPUTS__0__TYPE: File
      OUTPUTS__0__FILEPATH: assets/output/contoso-university.txt
      DATASTORE__CONNECTIONSTRING: Host=relational-database-postgres-1;Port=5432;Database=movies;Username=postgres;Password=${POSTGRES_PASSWORD?}
      DATASTORE__PROVIDER: PostgreSQL
      DATASTORE__TYPE: SQL
      SCHEMAREGISTRY__SCHEMA__SUBJECT: movies-value
      SCHEMAREGISTRY__SCHEMA__VERSION: 1
      SCHEMAREGISTRY__TYPE: Kafka
      SCHEMAREGISTRY__URL: schema-registry-kafka-1:8081
      TELEMETRY__ENDPOINT: http://observability-opentelemetry-collector-1:4317
      TELEMETRY__EXPORTERTYPE: OpenTelemetry
      FEATUREFLAGS__ENABLEDATACATALOG: true
      FEATUREFLAGS__ENABLEINPUTS: true
      FEATUREFLAGS__ENABLEOUTPUTS: true
      FEATUREFLAGS__ENABLETELEMETRY: true
      FEATUREFLAGS__ENABLEAUTH: true
    labels:
      traefik.enable: true
      traefik.http.routers.movies-dp.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.routers.movies-dp.rule: Host(`movies-dp.${DOMAIN?}`)
    networks:
      - internal
      - public

  energy-sector:
    image: ghcr.io/devantler/data-product:v0.1.32
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NAME: Energy Sector Data Product
      DESCRIPTION: A data product to query and manage energy sector data
      PUBLICURL: https://energy-sector-dp.${DOMAIN?}
      LICENSE__NAME: MIT
      LICENSE__URL: https://opensource.org/licenses/MIT
      OWNER__NAME: ${DP_OWNER_NAME?}
      OWNER__EMAIL: ${DP_OWNER_EMAIL?}
      OWNER__ORGANISATION: ${DP_OWNER_ORGANISATION?}
      OWNER__PHONE: ${DP_OWNER_PHONE?}
      OWNER__WEBSITE: ${DP_OWNER_WEBSITE?}
      APIS__REST__ENABLEBULKCONTROLLER: true
      CACHESTORE__SERVER: data-product-redis-1:6379
      CACHESTORE__TYPE: Redis
      CACHESTORE__DATABASE: 2
      AUTH__TYPE: Keycloak
      AUTH__AUTHSERVERURL: https://auth.${DOMAIN?}/
      AUTH__CLIENTID: ${DP_AUTH_CLIENTID?}
      AUTH__CLIENTSECRET: ${DP_AUTH_CLIENTSECRET?}
      DASHBOARD__EMBEDDEDSERVICES__0__NAME: Tracing
      DASHBOARD__EMBEDDEDSERVICES__0__URL: https://jaeger.${DOMAIN?}
      DASHBOARD__EMBEDDEDSERVICES__1__NAME: Monitoring
      DASHBOARD__EMBEDDEDSERVICES__1__URL: https://grafana.${DOMAIN?}/d/KdDACDp4z/data-product-metrics?orgId=1&refresh=5s&var-job=opentelemetry-collector&var-exported_job=energy-sector-data-product&var-http_client_peer_name=All&kiosk
      DASHBOARD__EMBEDDEDSERVICES__2__NAME: Data Store
      DASHBOARD__EMBEDDEDSERVICES__2__URL: https://postgres.${DOMAIN?}
      DATACATALOG__TYPE: DataHub
      DATACATALOG__URL: https://datahub.${DOMAIN?}
      DATACATALOG__ACCESSTOKEN: ${DATA_CATALOG_ACCESS_TOKEN?}
      INPUTS__0__GROUPID: energy-sector
      INPUTS__0__SERVERS: event-streaming-kafka-1:9092
      INPUTS__0__TOPIC: energy-sector
      INPUTS__0__TYPE: Kafka
      OUTPUTS__0__TYPE: File
      OUTPUTS__0__FILEPATH: assets/output/contoso-university.txt
      DATASTORE__CONNECTIONSTRING: Host=relational-database-postgres-1;Port=5432;Database=energy-sector;Username=postgres;Password=${POSTGRES_PASSWORD?}
      DATASTORE__PROVIDER: PostgreSQL
      DATASTORE__TYPE: SQL
      SCHEMAREGISTRY__SCHEMA__SUBJECT: energy-sector-value
      SCHEMAREGISTRY__SCHEMA__VERSION: 1
      SCHEMAREGISTRY__TYPE: Kafka
      SCHEMAREGISTRY__URL: schema-registry-kafka-1:8081
      TELEMETRY__ENDPOINT: http://observability-opentelemetry-collector-1:4317
      TELEMETRY__EXPORTERTYPE: OpenTelemetry
      FEATUREFLAGS__ENABLEDATACATALOG: true
      FEATUREFLAGS__ENABLEINPUTS: true
      FEATUREFLAGS__ENABLEOUTPUTS: true
      FEATUREFLAGS__ENABLETELEMETRY: true
      FEATUREFLAGS__ENABLEAUTH: true
    labels:
      traefik.enable: true
      traefik.http.routers.energy-sector-dp.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.routers.energy-sector-dp.rule: Host(`energy-sector-dp.${DOMAIN?}`)
    networks:
      - internal
      - public

  redis:
    image: redis:7.0.11-alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - internal
    healthcheck:
      test: redis-cli ping || exit 1

networks:
  internal:
    external: true
  public:
    external: true

volumes:
  redis:
