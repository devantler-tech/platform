networks:
  public:
    external: true
  tunnel:
    external: true
services:
  server:
    command:
      - '--providers.docker'
      - '--providers.docker.network=public'
      - '--api.dashboard'
      - '--ping'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.https.address=:443'
      - '--entrypoints.https.http.tls=true'
      - '--entrypoints.https.http.tls.domains[0].main=${DOMAIN?}'
      - '--entrypoints.https.http.tls.domains[0].sans=*.${DOMAIN?}'
      - '--entrypoints.https.http.tls.certresolver=letsencrypt'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.caserver=${LETS_ENCRYPT_CASERVER_URL:-https://acme-v02.api.letsencrypt.org/directory}'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=${LETS_ENCRYPT_DNS_PROVIDER:-cloudflare}'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=${LETS_ENCRYPT_DNS_RESOLVERS:-1.1.1.1:53,1.0.0.1:53}'
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL?}
      CF_API_KEY: ${CF_API_KEY?}
    healthcheck:
      test: traefik healthcheck --ping
    image: traefik:v2.10
    labels:
      traefik.enable: true
      traefik.http.middlewares.auth-verify.forwardAuth.address: http://oauth2-proxy.${DOMAIN?}/oauth2/auth
      traefik.http.middlewares.auth-verify.forwardAuth.trustForwardHeader: true
      traefik.http.middlewares.auth-verify.forwardAuth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,Set-Cookie
      traefik.http.middlewares.auth-signin.errors.service: oauth2-proxy-server-1@docker
      traefik.http.middlewares.auth-signin.errors.status: '401'
      traefik.http.middlewares.auth-signin.errors.query: /oauth2/sign_in

      traefik.http.routers.traefik-dashboard.service: api@internal
      traefik.http.routers.traefik-dashboard.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.routers.traefik-dashboard.rule: Host(`traefik.${DOMAIN?}`)
      # traefik.http.routers.traefik-dashboard.middlewares: auth-signin,auth-verify
    networks:
      - tunnel
      - public
    ports:
      - '80:80'
      - '443:443'
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt

volumes:
  letsencrypt: null
