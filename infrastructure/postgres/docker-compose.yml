networks:
  internal:
    external: true
  public:
    external: true
services:
  pgweb:
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGWEB_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD?}@postgres:5432?sslmode=disable
    healthcheck:
      interval: 5s
      test: [ "CMD", "nc", "-vz", "127.0.0.1", "8081" ]
    image: sosedoff/pgweb:0.14.0
    labels:
      traefik.enable: true
      traefik.http.routers.pgweb.entrypoints: ${TRAEFIK_ENTRYPOINTS?}
      traefik.http.routers.pgweb.rule: Host(`pgweb.${DOMAIN?}`)
    networks:
      - public
    restart: unless-stopped
  postgres:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?}
    healthcheck:
      test: pg_isready -U postgres
    image: postgres:15.2
    labels:
      traefik.enable: true
      traefik.tcp.routers.postgres.entrypoints: postgres
      traefik.tcp.routers.postgres.rule: HostSNI(`*`)
    networks:
      - internal
      - public
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
volumes:
  postgres-data: null