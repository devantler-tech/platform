networks:
  public:
    external: true
  internal:
    external: true

services:
  authentik-server:
    image: ghcr.io/goauthentik/server:2023.3.1
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-postgres}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS?}
      AUTHENTIK_SECRET_KEY: ${SECRET_KEY?}
    volumes:
      - media:/media
      - templates:/templates
    networks:
      - public
      - internal
    labels:
      traefik.enable: true
      traefik.http.routers.authentik-server.rule: Host(`authentik.${DOMAIN?}`)
      traefik.http.routers.authentik-server.entrypoints: ${TRAEFIK_ENTRYPOINTS:-https}
      traefik.http.services.authentik-server.loadbalancer.server.port: 9443
  authentik-worker:
    image: ghcr.io/goauthentik/server:2023.3.1
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-postgres}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS?}
      AUTHENTIK_SECRET_KEY: ${SECRET_KEY?}
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - media:/media
      - certs:/certs
      - templates:/templates

volumes:
  media:
  certs:
  templates:
