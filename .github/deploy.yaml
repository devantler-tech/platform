name: Deploy

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
    paths:
      - "k8s/**"
      - ".github/workflows/deploy.yaml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  push-to-oci-prod:
    runs-on: ubuntu-latest
    environment: prod
    env:
      DEPLOYMENT_ENV: prod
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Install flux
        uses: fluxcd/flux2/action@main
        # TODO: Make `Push to GHCR OCI` into a GitHub Action.
      - name: üó≥Ô∏è Push to GHCR OCI
        run: |
          flux push artifact oci://ghcr.io/${{ github.repository }}/manifests-${{ env.DEPLOYMENT_ENV }}:${{ github.sha }} \
            --path=./k8s \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)" \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
          flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests-${{ env.DEPLOYMENT_ENV }}:${{ github.sha }} \
            --tag ${{ github.ref_name }} \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
          flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests-${{ env.DEPLOYMENT_ENV }}:${{ github.sha }} \
            --tag latest \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs:
      - push-to-oci-prod
    environment: prod
    env:
      DEPLOYMENT_ENV: prod
    steps:
      - name: ‚öôÔ∏è Setup Flux
        uses: fluxcd/flux2/action@main
      - name: üõ†Ô∏è Add kubeconfig to host
        run: |
          mkdir ~/.kube
          echo "${{ secrets.PROD_KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          export KUBECONFIG=~/.kube/config
          export KUBE_CONFIG_PATH=~/.kube/config
      - name: üõ†Ô∏è Set kube context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.PROD_KUBE_CONFIG }}
      # TODO: Install Cilium with Flux.
      # https://github.com/cilium/cilium/blob/main/install/kubernetes/cilium/values.yaml
      - name: üöÄ Deploy Cilium
        run: |
          helm repo add cilium https://helm.cilium.io/
          helm repo update
          helm upgrade --install \
            cilium \
            cilium/cilium \
            --namespace kube-system \
            --set ipam.mode=kubernetes \
            --set kubeProxyReplacement=true \
            --set securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
            --set securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
            --set cgroup.autoMount.enabled=false \
            --set cgroup.hostRoot=/sys/fs/cgroup \
            --set hubble.relay.enabled=true \
            --set hubble.ui.enabled=true
      - name: üöÄ Deploy Flux
        run: |
          flux check --pre
          flux install
      - name: üîê Create secret for SOPS
        uses: azure/k8s-create-secret@v5
        with:
          secret-type: generic
          secret-name: sops-age
          namespace: flux-system
          string-data: '{ "sops.agekey": "${{ secrets.PROD_SOPS_AGE_KEY }}" }'
      - name: üîÅ Create OCI Source and Kustomization
        run: |
          flux create source oci flux-system \
            --url=oci://ghcr.io/${{ github.repository }}/manifests-${{ env.DEPLOYMENT_ENV }} \
            --tag=latest
          flux create kustomization flux-system \
            --source=OCIRepository/flux-system \
            --path=clusters/homelab-${{ env.DEPLOYMENT_ENV }}/flux-system \
            --prune=true
      - name: üîÅ Reconcile
        run: flux reconcile source oci flux-system
