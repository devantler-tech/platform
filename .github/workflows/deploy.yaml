name: Deploy

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  bootstrap-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Setup homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: ‚öôÔ∏è Setup flux
        uses: fluxcd/flux2/action@main
      - uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.PROD_KUBE_CONFIG }}
      - name: ‚öôÔ∏è Install Cilium
        run: |
          helm repo add cilium https://helm.cilium.io/
          helm repo update
          helm upgrade --install \
            cilium \
            cilium/cilium \
            --namespace kube-system \
            --set ipam.mode=kubernetes \
            --set=kubeProxyReplacement=disabled \
            --set=securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
            --set=securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
            --set=cgroup.autoMount.enabled=false \
            --set=cgroup.hostRoot=/sys/fs/cgroup \
            --set=operator.replicas=1 \
            --set hubble.relay.enabled=true \
            --set hubble.ui.enabled=true
      - name: ‚öôÔ∏è Install Flux
        run: |
          flux check --pre
          flux install
      - name: üîê Create secret for SOPS
        uses: azure/k8s-create-secret@v5
        with:
          secret-type: generic
          secret-name: sops-age
          namespace: flux-system
          string-data: '{ "sops.agekey": "${{ secrets.PROD_SOPS_AGE_KEY }}" }'
      - name: üîÅ Create OCI Source and Kustomization
        run: |
          flux create source oci flux-system \
            --url=oci://ghcr.io/${{ github.repository }}/manifests-prod \
            --tag=latest
          flux create kustomization flux-system \
            --source=OCIRepository/flux-system \
            --path=${{ vars.PROD_FLUX_KUSTOMIZATION_PATH }} \
            --prune=true \
            --wait=true
  push-to-oci-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Setup flux
        uses: fluxcd/flux2/action@main
      - name: üó≥Ô∏è Push to GHCR OCI
        run: |
          flux push artifact oci://ghcr.io/${{ github.repository }}/manifests-prod:${{ github.sha }} \
            --path=./k8s \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)" \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
          flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests-prod:${{ github.sha }} \
            --tag ${{ github.ref_name }} \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
          flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests-prod:${{ github.sha }} \
            --tag latest \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
  deploy-prod:
    runs-on: ubuntu-latest
    needs:
      - bootstrap-prod
      - push-to-oci-prod
    environment: prod
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Setup homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: ‚öôÔ∏è Setup flux
        uses: fluxcd/flux2/action@main
      - name: ‚öôÔ∏è Install KSail
        run: brew install devantler/formulas/ksail
      - uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.PROD_KUBE_CONFIG }}
      - name: üîÅ Reconcile
        run: flux reconcile source oci flux-system
      - name: üëÄ Check reconciliation
        run: ksail check admin@homelab
