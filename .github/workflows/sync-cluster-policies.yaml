name: Sync Cluster Policies

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'k8s/base/infrastructure/cluster-policies/samples/**'

permissions: {}

jobs:
  sync-policies:
    runs-on: ubuntu-latest
    env:
      KYVERNO_POLICIES_DIR: k8s/base/infrastructure/cluster-policies/samples/
      KYVERNO_POLICIES_TEMP_DIR: /tmp/cluster-policies

    steps:
      - name: Generate GitHub App Token
        uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
      - name: Download latest Cluster Policies
        run: |
          git clone --filter=blob:none --sparse https://github.com/kyverno/policies ${{ env.KYVERNO_POLICIES_TEMP_DIR }}
          cd ${{ env.KYVERNO_POLICIES_TEMP_DIR }}
          git sparse-checkout set --no-cone '*/' ':!.*'
      - name: Remove blacklisted policies
        run: |
          while IFS= read -r pattern; do
          find ${{ env.KYVERNO_POLICIES_TEMP_DIR }} -path "${{ env.KYVERNO_POLICIES_TEMP_DIR }}/$pattern" -exec rm -rf {} +
            done < .github/cluster-policies-ignore.txt
      - name: Copy Cluster Policies to the target directory
        run: |
          mkdir -p ${{ env.KYVERNO_POLICIES_DIR }}
          rm -rf ${{ env.KYVERNO_POLICIES_DIR }}/*
          cp -r ${{ env.KYVERNO_POLICIES_TEMP_DIR }}/* ${{ env.KYVERNO_POLICIES_DIR }}
      - name: Create PR with changes
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: sync cluster policies"
          title: "chore: sync cluster policies"
          body: "Sync Cluster Policies from <https://github.com/kyverno/policies>"
          branch: sync-cluster-policies
          delete-branch: true
          signoff: true
          sign-commits: true
          reviewers: devantler
          assignees: devantler
          token: ${{ steps.generate-token.outputs.token }}
          branch-token: ${{ steps.generate-token.outputs.token }}
