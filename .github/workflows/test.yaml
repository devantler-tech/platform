name: Test

env:
  SCRIPTS_DIR: ./.github/scripts
  CODE_DIR: ./code

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docker: ${{ steps.filter.outputs.docker }}
      action: ${{ steps.filter.outputs.action }}
      k8s: ${{ steps.filter.outputs.k8s }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            action:
              - '.github/workflows/test.yaml'
            k8s:
              - 'k8s/**'
  k8s-validate:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.k8s == 'true' || needs.changes.outputs.action == 'true' }}
    steps:
      - name: 📑 Checkout
        uses: actions/checkout@v4
      - name: ⛴️ Setup yq
        uses: fluxcd/pkg/actions/yq@main
      - name: ⛴️ Setup kubeconform
        uses: fluxcd/pkg/actions/kubeconform@main
      - name: ⛴️ Setup kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: ✅ Validate manifests
        run: $SCRIPTS_DIR/k8s-validate-manifests.sh || exit 1
  k8s-e2e:
    runs-on: ubuntu-latest
    needs:
      - changes
      - k8s-validate
    if: ${{ github.event.pull_request.draft == false && (needs.changes.outputs.k8s == 'true' || needs.changes.outputs.action == 'true') }}
    steps:
      - name: 📑 Checkout
        uses: actions/checkout@v4
      - name: ⚙️ Install talosctl
        run: curl -sL https://talos.dev/install | sh
      - name: 🐳 Provision Talos Linux cluster in Docker
        run: talosctl cluster create --name homelab --wait
      - name: 🏡 Set current cluster to 'homelab'
        run: kubectl config use-context 'admin@homelab' || exit 1
      - name: ⚙️ Setup Flux
        uses: fluxcd/flux2/action@main
      - name: ⚙️ Install Flux
        run: |
          flux check --pre
          flux install --components-extra="image-reflector-controller,image-automation-controller"
      - name: 🪵 Extract branch name
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: 🔁 Setup cluster reconciliation
        run: $SCRIPTS_DIR/e2e-k8s-setup-cluster-reconciliation.sh ${{ github.event.repository.html_url }} ${{ steps.extract_branch.outputs.branch }} local ${{ github.actor }} ${{ secrets.GITHUB_TOKEN }}
      - name: ✅ Verify cluster reconciliation
        run: $SCRIPTS_DIR/e2e-k8s-verify-cluster-reconciliation.sh
      - name: 🐛 Print logs on failure
        if: failure()
        run: $SCRIPTS_DIR/e2e-k8s-debug-failure.sh
      - name: ⚠️ Check for use of deprecated APIs
        run: $SCRIPTS_DIR/e2e-k8s-check-deprecated-apis.sh
