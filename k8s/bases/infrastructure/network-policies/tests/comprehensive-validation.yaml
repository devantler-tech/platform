---
apiVersion: tests.testkube.io/v3
kind: Test
metadata:
  name: network-policy-comprehensive-validation
  namespace: testkube
spec:
  type: curl/test
  content:
    type: string
    data: |
      #!/bin/bash
      
      echo "üîí COMPREHENSIVE NETWORK POLICY VALIDATION"
      echo "=========================================="
      
      PASSED=0
      FAILED=0
      
      # Function to run test and track results
      run_test() {
          local test_name="$1"
          local namespace="$2"
          local image="$3"
          local command="$4"
          local expected="$5"
          
          echo -n "Testing: $test_name ... "
          
          if kubectl run test-$(date +%N) --rm -i --restart=Never \
              --namespace="$namespace" \
              --image="$image" \
              --timeout=30s \
              -- sh -c "$command" >/dev/null 2>&1; then
              result="success"
          else
              result="failure"
          fi
          
          if [ "$result" = "$expected" ]; then
              echo "‚úì PASS"
              PASSED=$((PASSED + 1))
          else
              echo "‚úó FAIL (expected $expected, got $result)"
              FAILED=$((FAILED + 1))
          fi
      }
      
      echo ""
      echo "üåê TESTING ALLOWED EXTERNAL CONNECTIVITY"
      echo "--------------------------------------"
      
      # Homepage external access
      run_test "Homepage ‚Üí Cloudflare API" \
          "homepage" \
          "curlimages/curl:latest" \
          "curl -s --connect-timeout 10 https://api.cloudflare.com/client/v4/user/tokens/verify" \
          "success"
      
      # Nextcloud external access
      run_test "Nextcloud ‚Üí Download Site" \
          "nextcloud" \
          "curlimages/curl:latest" \
          "curl -s --connect-timeout 10 -I https://download.nextcloud.com" \
          "success"
      
      echo ""
      echo "üè† TESTING INTERNAL CONNECTIVITY"
      echo "------------------------------"
      
      # DNS resolution
      run_test "DNS from Homepage" \
          "homepage" \
          "busybox:latest" \
          "nslookup kubernetes.default.svc.cluster.local" \
          "success"
      
      # Service-to-service communication
      run_test "Testkube ‚Üí Whoami" \
          "testkube" \
          "curlimages/curl:latest" \
          "curl -s --connect-timeout 10 http://whoami.whoami.svc.cluster.local" \
          "success"
      
      # Traefik to services
      run_test "Traefik ‚Üí Whoami" \
          "traefik" \
          "curlimages/curl:latest" \
          "curl -s --connect-timeout 10 http://whoami.whoami.svc.cluster.local" \
          "success"
      
      echo ""
      echo "üö´ TESTING BLOCKED CONNECTIVITY"
      echo "-----------------------------"
      
      # Blocked external access
      run_test "Whoami ‚Üí External (blocked)" \
          "whoami" \
          "curlimages/curl:latest" \
          "curl -s --connect-timeout 5 https://www.google.com" \
          "failure"
      
      # Blocked cross-namespace
      run_test "Nextcloud ‚Üí Homepage (blocked)" \
          "nextcloud" \
          "curlimages/curl:latest" \
          "curl -s --connect-timeout 5 http://homepage.homepage.svc.cluster.local:3000" \
          "failure"
      
      # Blocked database access
      run_test "Homepage ‚Üí DB (blocked)" \
          "homepage" \
          "postgres:15" \
          "pg_isready -h db-rw.nextcloud.svc.cluster.local -t 5" \
          "failure"
      
      echo ""
      echo "üîß TESTING SYSTEM COMPONENTS"
      echo "---------------------------"
      
      # API server access
      run_test "Goldilocks ‚Üí API Server" \
          "goldilocks" \
          "bitnami/kubectl:latest" \
          "kubectl get pods --request-timeout=10s" \
          "success"
      
      echo ""
      echo "üìä VALIDATION SUMMARY"
      echo "==================="
      echo "‚úì Passed: $PASSED"
      echo "‚úó Failed: $FAILED"
      echo "Total:   $((PASSED + FAILED))"
      echo ""
      
      if [ $FAILED -eq 0 ]; then
          echo "üéâ ALL TESTS PASSED - Network policies are working correctly!"
          echo ""
          echo "Security Status: ‚úÖ SECURE"
          echo "- Default deny policy active"
          echo "- Least privilege access enforced"
          echo "- External access restricted to necessary services"
          echo "- Cross-namespace communication blocked"
          echo "- System components have required access"
          exit 0
      else
          echo "‚ùå SOME TESTS FAILED - Please review network policies"
          echo ""
          echo "Security Status: ‚ö†Ô∏è  NEEDS ATTENTION"
          exit 1
      fi